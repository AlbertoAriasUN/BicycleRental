/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaces;

import logs.Handler;
import exceptions.MustHaveTypeException;
//import static interfaces.debug.printListClient;
//import static interfaces.debug.stringToDate;
import java.io.FileInputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import logic.*;
import model.*;
import java.util.Collections;
import exceptions.*;
import java.io.IOException;
import java.util.logging.*;
import logs.*;
/**
 *
 * @author maciex
 */

public class Gui extends javax.swing.JFrame {

    static FileHandler fileTxt;
    static SimpleFormatter formatterTxt;

    Logger logger = Logger.getLogger( Gui.class.getName() );
    
    int TABLE_MAX_SIZE = 25;
    int LEFTTABLE_COLUMNS = 5;
    int RIGHTTABLE_COLUMNS = 9;
    
    int clientAddingEtaps = 0;
    int bikeAddingEtaps = 0;
    RecordManager<Client> clients = new RecordManager<>();
    RecordManager<Bicycle> bicycle = new RecordManager<>();
    RecordManager<Reservation> reservations = new RecordManager<>();
    
    String name = null;
    String surname = null;
    String phoneNumber = null;
    String email = null;
    
    String wheelSize = null;
    String lifeTillService = null;
    String pricePerDay = null;
    String riddenDistance = null;
    String numberOfGears = null;
    String type = null;
    /**
     * Creates new form gui
     */
    public Gui() {
        initComponents();

        try {
            LogManager.getLogManager().readConfiguration(new FileInputStream("logging.conf"));
        } catch (IOException ex) {
            logger.log(Level.SEVERE, null, ex);
        } catch (SecurityException ex) {
            logger.log(Level.SEVERE, null, ex);
        }
        
        logger.setFilter(FinalFilter.getInstance());
        FinalFilter.setLoggable(true);
        logger.addHandler(Handler.getHandler());
        logger.log(Level.INFO, "Creating interface \n ========================= \n");
        
        Client kowalski = new Client("Marcin","Kowalski","504244122","mkowal@gmail.com");
        Client nowak = new Client("Alfred","Nowak","712341111","nowak777@gmail.com");
        Client doborowa = new Client("Janina","Doborowa","122663112","doborowja@gmail.com");

        
        clients.add(kowalski);
        clients.add(nowak);
        clients.add(doborowa);

        printListClient(clients.printAll() , tableLeft);

        Bicycle zwykly = new Bicycle();
        Moutain gorski = new Moutain();
        Race wyczynowy = null;
        try{
        wyczynowy = new Race("BMX" , 6 , 200);
        }
        catch (MustHaveTypeException e){
              System.out.println(e.getMessage());
        }
                
        
        bicycle.add(zwykly);
        bicycle.add(gorski);
        bicycle.add(wyczynowy);

        printListBicycle(bicycle.printAll() , tableRight);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableRight = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableLeft = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        labelClientConfirm = new javax.swing.JLabel();
        btnClientDelete = new javax.swing.JButton();
        btnClientOK = new javax.swing.JButton();
        btnClientCancel = new javax.swing.JButton();
        txtClientInsert = new javax.swing.JTextField();
        labelClient = new javax.swing.JLabel();
        btnClientAdd = new javax.swing.JButton();
        btnClientRefresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnBikeCancel = new javax.swing.JButton();
        btnBikeAdd = new javax.swing.JButton();
        btnBikeOK = new javax.swing.JButton();
        txtBikeInsert = new javax.swing.JTextField();
        labelBike = new javax.swing.JLabel();
        labelBikeConfirm = new javax.swing.JLabel();
        btnBikeDelete = new javax.swing.JButton();
        btnBikeRefresh = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtDateStart = new javax.swing.JTextField();
        txtDateStop = new javax.swing.JTextField();
        btnReserve = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        labelReserve = new javax.swing.JLabel();
        btnReservDays = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnLogsON = new javax.swing.JRadioButton();
        btnLogsOFF = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableRight.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Wielkość kół", "Km do przeglądu", "Cena za dobę", "Km przejechane", "Wypożyczony", "Zarezerwowany", "Liczba przerzutek", "Typ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableRight);
        if (tableRight.getColumnModel().getColumnCount() > 0) {
            tableRight.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        tableLeft.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Imię", "Nazwisko", "Telefon", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableLeft);
        if (tableLeft.getColumnModel().getColumnCount() > 0) {
            tableLeft.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        jLabel1.setText("KLIENCI:");

        jLabel2.setText("ROWERY:");

        labelClientConfirm.setText("...");

        btnClientDelete.setText("Usuń klienta");
        btnClientDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientDeleteActionPerformed(evt);
            }
        });

        btnClientOK.setText("OK");
        btnClientOK.setEnabled(false);
        btnClientOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientOKActionPerformed(evt);
            }
        });

        btnClientCancel.setText("Cancel");
        btnClientCancel.setEnabled(false);
        btnClientCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientCancelActionPerformed(evt);
            }
        });

        labelClient.setText("Aby dodać klienta naciśnij przycisk i postępuj zgodnie z instrukcjami: ");

        btnClientAdd.setText("Dodaj klienta");
        btnClientAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientAddActionPerformed(evt);
            }
        });

        btnClientRefresh.setText("Odśwież");
        btnClientRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addComponent(labelClient))
                        .addComponent(txtClientInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(labelClientConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClientCancel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnClientOK)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnClientAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClientRefresh)
                        .addGap(32, 32, 32)
                        .addComponent(btnClientDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClientAdd)
                    .addComponent(btnClientDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClientRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelClient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtClientInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClientOK)
                    .addComponent(btnClientCancel)
                    .addComponent(labelClientConfirm))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        btnBikeCancel.setText("Cancel");
        btnBikeCancel.setEnabled(false);
        btnBikeCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBikeCancelActionPerformed(evt);
            }
        });

        btnBikeAdd.setText("Dodaj rower");
        btnBikeAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBikeAddActionPerformed(evt);
            }
        });

        btnBikeOK.setText("OK");
        btnBikeOK.setEnabled(false);
        btnBikeOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBikeOKActionPerformed(evt);
            }
        });

        labelBike.setText("Aby dodać rower naciśnij przycisk i postępuj zgodnie z instrukcjami: ");

        labelBikeConfirm.setText("...");

        btnBikeDelete.setText("Usuń rower");
        btnBikeDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBikeDeleteActionPerformed(evt);
            }
        });

        btnBikeRefresh.setText("Odśwież");
        btnBikeRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBikeRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(labelBikeConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                    .addGap(45, 45, 45)
                                    .addComponent(labelBike))
                                .addComponent(txtBikeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnBikeCancel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnBikeOK))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnBikeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnBikeRefresh)
                        .addGap(34, 34, 34)
                        .addComponent(btnBikeDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBikeAdd)
                    .addComponent(btnBikeDelete)
                    .addComponent(btnBikeRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelBike)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBikeInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBikeOK)
                    .addComponent(btnBikeCancel)
                    .addComponent(labelBikeConfirm))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel3.setText("REZERWACJA:");

        txtDateStart.setText("dd.MM.yy HH:mm");

        txtDateStop.setText("dd.MM.yy HH:mm");

        btnReserve.setText("Rezerwuj");
        btnReserve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReserveActionPerformed(evt);
            }
        });

        jLabel4.setText("Data rozpoczęcia rezerwacji;");

        jLabel5.setText("Data zakończenia rezerwacji;");

        labelReserve.setText("...");

        btnReservDays.setText("Get current date");
        btnReservDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservDaysActionPerformed(evt);
            }
        });

        jButton1.setText("Lista rezerwacji");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(218, 218, 218)
                        .addComponent(btnReserve))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDateStop, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(labelReserve)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReservDays)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDateStop, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelReserve)
                    .addComponent(btnReservDays)
                    .addComponent(btnReserve))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        btnLogsON.setSelected(true);
        btnLogsON.setText("Logs ON");
        btnLogsON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogsONActionPerformed(evt);
            }
        });

        btnLogsOFF.setText("Logs OFF");
        btnLogsOFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogsOFFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogsON)
                    .addComponent(btnLogsOFF))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(btnLogsON)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogsOFF)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClientAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientAddActionPerformed
 labelClient.setText("Podaj imię klienta i naciśnij przycisk OK: ");
        btnClientOK.setEnabled(true);
        btnClientAdd.setEnabled(false);
        btnClientCancel.setEnabled(true);
        txtClientInsert.setText(name);
        clientAddingEtaps = 1;
    }//GEN-LAST:event_btnClientAddActionPerformed

    private void btnClientOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientOKActionPerformed
        clientAdd();   
    }//GEN-LAST:event_btnClientOKActionPerformed

    private void btnClientCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientCancelActionPerformed
        name = null;
        surname = null;
        phoneNumber = null;
        email = null;
        clientAddingEtaps = 0;
        btnClientOK.setEnabled(false);
        btnClientAdd.setEnabled(true);
        btnClientCancel.setEnabled(false);
        //btnClientBack.setEnabled(false);
        labelClient.setText("Aby dodać klienta naciśnij przycisk i postępuj zgodnie z instrukcjami: ");
        labelClientConfirm.setText("Anulowano.");
        txtClientInsert.setText("");
    }//GEN-LAST:event_btnClientCancelActionPerformed

    private void btnClientDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientDeleteActionPerformed
        int curRow = tableLeft.getSelectedRow();
        try {
            if (curRow > clients.size()) throw new RecordNotFoundException();
            int id = (Integer) tableLeft.getValueAt(curRow, 0);
            clients.delete(id);
            nullTable(tableLeft, LEFTTABLE_COLUMNS);
            printListClient(clients.printAll(), tableLeft);
        }
        catch (RecordNotFoundException e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnClientDeleteActionPerformed

    private void btnBikeAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBikeAddActionPerformed
        labelBike.setText("Podaj imię klienta i naciśnij przycisk OK: ");
        btnBikeOK.setEnabled(true);
        btnBikeAdd.setEnabled(false);
        btnBikeCancel.setEnabled(true);
        txtBikeInsert.setText(name);
        bikeAddingEtaps = 1;
    }//GEN-LAST:event_btnBikeAddActionPerformed

    private void btnBikeOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBikeOKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBikeOKActionPerformed

    private void btnBikeCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBikeCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBikeCancelActionPerformed

    private void btnBikeDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBikeDeleteActionPerformed
        int curRow = tableRight.getSelectedRow();

    	int id = Integer.parseInt(tableRight.getValueAt(curRow, 0).toString());
        bicycle.delete(id);
        nullTable(tableRight, RIGHTTABLE_COLUMNS);
        printListBicycle(bicycle.printAll(), tableRight);
    }//GEN-LAST:event_btnBikeDeleteActionPerformed

    private void btnReserveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReserveActionPerformed
        try{
            int curRowClient = tableLeft.getSelectedRow();
            int curRowBicycle = tableRight.getSelectedRow();
            int cid = Integer.parseInt(tableLeft.getValueAt(curRowClient, 0).toString());
            int bid = Integer.parseInt(tableRight.getValueAt(curRowBicycle, 0).toString());
            Client c = clients.get(cid);
            Bicycle b = bicycle.get(bid);

            String dateStart = txtDateStart.getText();
            String dateStop = txtDateStop.getText();

            if (dateStart.equals("dd.MM.yy HH:mm") || dateStop.equals("dd.MM.yy HH:mm")) 
                throw new ReservationDateError(1);
            Date d1 = stringToDate(dateStart);
            Date d2 = stringToDate(dateStop);

            long time1 = d1.getTime();
            long time2 = d2.getTime();
            if( time1  >= time2 ) throw new ReservationDateError(2);

            ArrayList <Integer> reservList = b.getRid();
            for (int i = 0 ; i < reservList.size() ; i ++ ){
                Reservation check = reservations.get(reservList.get(i));
                if (check != null){
                    long chtime1 = check.getReservationBeginsDate().getTime();
                    long chtime2 = check.getReservationTerminatesDate().getTime();
                    if( (time1 >= chtime1 && time1 <= chtime2) || (time2 >= chtime1 && time2 <= chtime2)
                            || (time1 <= chtime1 && time2 >= chtime2)) throw new ReservationDateError(3);
                }
            }
            Reservation r = new Reservation(b, c, d1, d2);
            reservations.add(r);
            txtDateStart.setText("dd.MM.yy HH:mm");
            txtDateStop.setText("dd.MM.yy HH:mm");
            labelReserve.setText("Zarezerwowano");
            printListClient(clients.printAll(), tableLeft);
            printListBicycle(bicycle.printAll(), tableRight);
        }
        catch ( ReservationDateError e){
            labelReserve.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnReserveActionPerformed

    private void btnReservDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservDaysActionPerformed
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy HH:mm");
        Date data = new Date();
        txtDateStart.setText( dateFormat.format(data).toString() );
        txtDateStop.setText( dateFormat.format(data).toString());
    }//GEN-LAST:event_btnReservDaysActionPerformed

    private void btnClientRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientRefreshActionPerformed
        printListClient(clients.printAll(), tableLeft);
    }//GEN-LAST:event_btnClientRefreshActionPerformed

    private void btnBikeRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBikeRefreshActionPerformed
        printListBicycle(bicycle.printAll(), tableRight);
    }//GEN-LAST:event_btnBikeRefreshActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new GuiReservation(reservations).setVisible(true);  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnLogsONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogsONActionPerformed
        FinalFilter.setLoggable(true);
        btnLogsOFF.setSelected(false);
    }//GEN-LAST:event_btnLogsONActionPerformed

    private void btnLogsOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogsOFFActionPerformed
        FinalFilter.setLoggable(false);
        btnLogsON.setSelected(false);
    }//GEN-LAST:event_btnLogsOFFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }
    

    private void print( Client c , int row , javax.swing.JTable table ){
            table.setValueAt( c.getId() , row , 0 );
            table.setValueAt( c.getName() , row , 1 );
            table.setValueAt( c.getSurname() , row , 2 );
            table.setValueAt( c.getPhoneNumber() , row , 3 );
            table.setValueAt( c.getEMail() , row , 4 );
        }
        
    private void print( Bicycle b , int row , javax.swing.JTable table ){ 
            String[] info = b.getAllInfo();
            for ( int i = 0 ; i < info.length ; i++ ){
                table.setValueAt(info[i], row, i);
            }
        }
        
  private void printListClient( ArrayList <Client> list , javax.swing.JTable table){
            logger.log(Level.INFO, "Filling client table");
            Collections.sort(list);
            for (int i = 0 ; i < list.size() ; i ++){
                print( list.get(i) , i , table );
            }
        }
        
   private void printListBicycle( ArrayList <Bicycle> list , javax.swing.JTable table){
            logger.log(Level.INFO, "Filling bicyle table");
            Collections.sort(list);
            for (int i = 0 ; i < list.size() ; i ++){
                print( list.get(i) , i , table);
            }
        }

  static Date stringToDate( String date ){
            SimpleDateFormat format = new SimpleDateFormat("dd.MM.yy HH:mm");  

            Date d = null;

            try {
                d = format.parse(date);
            } catch (ParseException e) {
                e.printStackTrace();
            }
            return d;
        }
  
  public void backButtonMethod() {
        clientAddingEtaps--;
        switch (clientAddingEtaps){
                case 0:
                    labelClient.setText("1");
                    txtClientInsert.setText(name);
                    //btnClientBack.setEnabled(false);
                    break;
               case 1:
                    labelClient.setText("Podaj naziwsko klienta i naciśnij przycisk OK: ");
                    txtClientInsert.setText(surname);
                    break;
               case 2:
                    labelClient.setText("Podaj numer telefonu klienta i naciśnij przycisk OK: ");
                    txtClientInsert.setText(phoneNumber);
                    break;
               case 3:
                    labelClient.setText("Podaj email klienta i naciśnij przycisk OK: ");
                    txtClientInsert.setText(email);
                    break;
        }
    }
  
  private void nullTable ( javax.swing.JTable table , int numberOfColumns ){
    	for (int i = 0 ; i < TABLE_MAX_SIZE ; i ++ ){
    		for (int j = 0 ; j < numberOfColumns ; j ++ ){
    			table.setValueAt(" ", i, j);
    		}
    	}	
    }
  
  
  public void clientAdd(){
      switch (clientAddingEtaps){
                case 1:
                    name = txtClientInsert.getText();
                    txtClientInsert.setText(surname);
                    labelClient.setText("Podaj naziwsko klienta i naciśnij przycisk OK: ");
                    clientAddingEtaps = 2;
                    //btnClientBack.setEnabled(true);
                    break;
                case 2:
                    surname = txtClientInsert.getText();
                    txtClientInsert.setText(phoneNumber);
                    labelClient.setText("Podaj numer telefonu klienta i naciśnij przycisk OK: ");
                    clientAddingEtaps = 3;
                    break;
                case 3:
                    phoneNumber = txtClientInsert.getText();
                    txtClientInsert.setText(email);
                    labelClient.setText("Podaj email klienta i naciśnij przycisk OK: ");
                    clientAddingEtaps = 4;
                    break;
                case 4:
                    email = txtClientInsert.getText();
                    labelClient.setText("Aby dodać klienta naciśnij przycisk i postępuj zgodnie z instrukcjami: ");
                    labelClientConfirm.setText("Dodano.");
                    btnClientOK.setEnabled(false);
                    btnClientAdd.setEnabled(true);
                    btnClientCancel.setEnabled(false);
                    //btnClientBack.setEnabled(false);
                    clientAddingEtaps = 5;
                    break;
        }
        if ( clientAddingEtaps == 5 ){
            try {
                Client nowyKlient = new Client( name , surname, phoneNumber, email );
                System.out.println(nowyKlient.hashCode());
                if (clients.contains(nowyKlient)) throw new RecordExistsException();
                name = null;
                surname = null;
                phoneNumber = null;
                email = null;
                clients.add(nowyKlient);
                txtClientInsert.setText("");
                clientAddingEtaps = 0;
                printListClient(clients.printAll() , tableLeft);
            }
            catch (RecordExistsException e){
                System.out.println(e.getMessage());
            }
        }
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBikeAdd;
    private javax.swing.JButton btnBikeCancel;
    private javax.swing.JButton btnBikeDelete;
    private javax.swing.JButton btnBikeOK;
    private javax.swing.JButton btnBikeRefresh;
    private javax.swing.JButton btnClientAdd;
    private javax.swing.JButton btnClientCancel;
    private javax.swing.JButton btnClientDelete;
    private javax.swing.JButton btnClientOK;
    private javax.swing.JButton btnClientRefresh;
    private javax.swing.JRadioButton btnLogsOFF;
    private javax.swing.JRadioButton btnLogsON;
    private javax.swing.JButton btnReservDays;
    private javax.swing.JButton btnReserve;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelBike;
    private javax.swing.JLabel labelBikeConfirm;
    private javax.swing.JLabel labelClient;
    private javax.swing.JLabel labelClientConfirm;
    private javax.swing.JLabel labelReserve;
    private javax.swing.JTable tableLeft;
    private javax.swing.JTable tableRight;
    private javax.swing.JTextField txtBikeInsert;
    private javax.swing.JTextField txtClientInsert;
    private javax.swing.JTextField txtDateStart;
    private javax.swing.JTextField txtDateStop;
    // End of variables declaration//GEN-END:variables
}
